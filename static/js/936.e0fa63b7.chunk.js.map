{"version":3,"file":"static/js/936.e0fa63b7.chunk.js","mappings":"8KAEMA,EAAW,+BACXC,EAAM,mCAENC,EAAiB,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uBAA4C,CAC7DI,OAAQ,CACNC,QAASJ,KAJS,cAEhBK,EAFgB,gBAQTA,EAAKC,KAAKC,QARD,wEAUtBC,QAAQC,MAAM,KAAIC,OAVI,yDAAH,qDAcjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEDV,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CACvDI,OAAQ,CACNC,QAASJ,EACTY,MAAAA,KALgB,cAEdP,EAFc,gBASPA,EAAKC,KAAKC,QATH,wEAWpBC,QAAQC,MAAM,KAAIC,OAXE,yDAAH,sDAefG,EAAe,mCAAG,WAAMC,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Be,GAAM,CACtDX,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAQPA,EAAKC,KARE,wEAUpBE,QAAQC,MAAM,KAAIC,OAVE,yDAAH,sDAcfK,EAAe,mCAAG,WAAMD,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Be,EAA/B,YAA6C,CAC9DX,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAQPA,EAAKC,KARE,wEAUpBE,QAAQC,MAAM,KAAIC,OAVE,yDAAH,sDAcfM,EAAe,mCAAG,WAAMF,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Be,EAA/B,YAA6C,CAC9DX,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAQPA,EAAKC,KAAKC,QARH,wEAUpBC,QAAQC,MAAM,KAAIC,OAVE,yDAAH,sDAcfO,EAAM,CACVhB,kBAAAA,EACAU,gBAAAA,EACAE,gBAAAA,EACAE,gBAAAA,EACAC,gBAAAA,GAGF,K,0ECnFA,EAA2B,yB,SCmB3B,EAhBe,WACb,OACE,gBAAKE,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,4HCjBD,GAAgB,MAAQ,oBAAoB,YAAc,2B,2BC0C1D,EArCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBF,GAAW,GADO,kBAISd,EAAAA,EAAAA,oBAJT,OAIViB,EAJU,OAKhBL,EAAUK,GACVH,GAAW,GANK,gDAQhBvB,QAAQC,MAAM,+CAAd,MACAsB,GAAW,GATK,yDAAH,qDAajBE,GACD,GAAE,CAACJ,EAAWE,KAGb,iCACE,eAAIb,UAAWC,EAAAA,MAAf,SAA0B,oBAC1B,eAAID,UAAWC,EAAAA,WAAf,SACGS,EAAOO,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,MAAP,OACV,eAAIlB,UAAWC,EAAAA,WAAf,UACE,SAAC,KAAD,CAAMkB,GAAE,iBAAYvB,GAAMI,UAAWC,EAAAA,YAArC,SACGiB,KAF+BtB,EAD1B,OAQd,SAACwB,EAAA,EAAD,CAAQP,WAAYD,MAGzB,C","sources":["components/Api.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '6f157e49e729f31d4a7c0245fe6212a7';\n\nconst getTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await resp.data.results;\n  } catch (err) {\n    console.error(err.stack);\n  }\n};\n\nconst getMovieByQuery = async query => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: KEY,\n        query,\n      },\n    });\n\n    return await resp.data.results;\n  } catch (err) {\n    console.error(err.stack);\n  }\n};\n\nconst getMovieDetails = async id => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await resp.data;\n  } catch (err) {\n    console.error(err.stack);\n  }\n};\n\nconst getMovieCredits = async id => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await resp.data;\n  } catch (err) {\n    console.error(err.stack);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n\n    return await resp.data.results;\n  } catch (err) {\n    console.error(err.stack);\n  }\n};\n\nconst Api = {\n  getTrendingMovies,\n  getMovieByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default Api;\n","// extracted by mini-css-extract-plugin\nexport default {\"position\":\"Loader_position__3ws81\"};","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.position}>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\",\"moviesTitle\":\"Home_moviesTitle__r7UCZ\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './Home.module.css';\nimport Api from 'components/Api';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n\n      try {\n        const moviesData = await Api.getTrendingMovies();\n        setMovies(moviesData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Błąd podczas pobierania filmów:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [setMovies, setLoading]);\n\n  return (\n    <>\n      <h1 className={css.title}>Trending today</h1>\n      <ul className={css.moviesList}>\n        {movies.map(({ id, title }) => (\n          <li className={css.moviesItem} key={id}>\n            <Link to={`movies/${id}`} className={css.moviesTitle}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Loader setLoading={loading} />\n    </>\n  );\n};\nexport default Home;\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","params","api_key","resp","data","results","console","error","stack","getMovieByQuery","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Api","className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useState","movies","setMovies","loading","setLoading","useEffect","fetchMovies","moviesData","map","title","to","Loader"],"sourceRoot":""}